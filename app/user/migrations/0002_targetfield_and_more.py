# Generated by Django 5.2.5 on 2025-08-27 09:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TargetField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=255)),
                ('field_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='fieldformula',
            name='employee_or_department_required',
        ),
        migrations.RemoveField(
            model_name='fieldformula',
            name='department_team',
        ),
        migrations.RemoveField(
            model_name='fieldformula',
            name='employee',
        ),
        migrations.RemoveField(
            model_name='fieldformula',
            name='target_field',
        ),
        migrations.RemoveField(
            model_name='fieldformula',
            name='target_model',
        ),
        migrations.AddField(
            model_name='fieldformula',
            name='department_teams',
            field=models.ManyToManyField(blank=True, help_text='Required if no employees: Department teams for this formula.', to='user.departmentteams'),
        ),
        migrations.AddField(
            model_name='fieldformula',
            name='employees',
            field=models.ManyToManyField(blank=True, help_text='Optional: Employees for this formula (can span departments).', to='user.employee'),
        ),
        migrations.AlterField(
            model_name='fieldformula',
            name='formula',
            field=models.ForeignKey(default=1, help_text='Formula to apply.', on_delete=django.db.models.deletion.CASCADE, to='user.formula'),
        ),
        migrations.AlterUniqueTogether(
            name='targetfield',
            unique_together={('model_name', 'field_name')},
        ),
        migrations.AddField(
            model_name='fieldformula',
            name='target_fields',
            field=models.ManyToManyField(help_text='Fields to apply the formula to (same or different tables).', to='user.targetfield'),
        ),
    ]
