# Generated by Django 5.2.5 on 2025-08-27 05:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='configurations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_rate', models.FloatField(null=True)),
                ('as_of_date', models.DateField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Formula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formula_name', models.CharField(max_length=255)),
                ('formula_expression', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=12)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=122)),
                ('code', models.CharField(max_length=50)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=20)),
                ('registration_number', models.CharField(max_length=100)),
                ('mileage_km', models.PositiveIntegerField(default=0, help_text='Total distance travelled in kilometers')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleOwnerShipModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('own_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentTeams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.company')),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.company')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=255)),
                ('date_of_joining', models.DateField()),
                ('resign', models.BooleanField(default=False)),
                ('date_of_resignation', models.DateField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='employee_images/')),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.company')),
                ('department_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.departmentgroups')),
                ('department_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.departmentteams')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.designation')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.location')),
            ],
        ),
        migrations.CreateModel(
            name='FieldReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(choices=[('CurrentPackageDetails', 'Current Package Details'), ('ProposedPackageDetails', 'Proposed Package Details'), ('FinancialImpactPerMonth', 'Financial Impact Per Month'), ('IncrementDetailsSummary', 'Increment Details Summary'), ('Employee', 'Employee')], max_length=255)),
                ('field_name', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=255)),
            ],
            options={
                'unique_together': {('model_name', 'field_name')},
            },
        ),
        migrations.CreateModel(
            name='FinancialImpactPerMonth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serving_years', models.IntegerField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gratuity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bonus', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('leave_encashment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mobile_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fuel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('emp_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.employeestatus')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.employee')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('contact', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.gender')),
            ],
            options={
                'permissions': [('can_admin_access', 'Can Admin Access')],
            },
        ),
        migrations.CreateModel(
            name='hr_assigned_companies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.company')),
                ('hr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IncrementDetailsSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_employees', models.IntegerField(null=True)),
                ('eligible_for_increment', models.IntegerField(null=True)),
                ('current_salary', models.FloatField(null=True)),
                ('effective_increment_rate_hod', models.FloatField(null=True)),
                ('effective_fuel_percentage_hod', models.FloatField(null=True)),
                ('salary_increment_impact_hod', models.FloatField(null=True)),
                ('fuel_increment_impact_hod', models.FloatField(null=True)),
                ('other_costs_in_p_and_l', models.FloatField(null=True)),
                ('total_cost_on_p_and_l_per_month', models.FloatField(null=True)),
                ('revised_department_salary', models.FloatField(null=True)),
                ('staff_revised_cost', models.FloatField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.company')),
                ('department_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.departmentteams')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('department_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.departmentgroups')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.section'),
        ),
        migrations.CreateModel(
            name='ProposedPackageDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('increment_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('increased_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('revised_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('increased_fuel_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('revised_fuel_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mobile_allowance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.employee')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.vehicleinfo')),
            ],
        ),
        migrations.CreateModel(
            name='CurrentPackageDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fuel_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mobile_allowance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_deleted', models.BooleanField(default=False)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='user.employee')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.vehicleinfo')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('year', models.PositiveIntegerField()),
                ('condition', models.CharField(choices=[('NEW', 'Brand New'), ('USED', 'Used')], default='NEW', max_length=10)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='user.vehiclebrand')),
            ],
            options={
                'unique_together': {('brand', 'name', 'year', 'condition')},
            },
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='vehicle',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='user.vehiclemodel'),
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='ownership_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.vehicleownershipmodel'),
        ),
        migrations.CreateModel(
            name='FieldFormula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_model', models.CharField(max_length=255)),
                ('target_field', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('company', models.ForeignKey(help_text='Required: Formula applies to this company.', on_delete=django.db.models.deletion.CASCADE, to='user.company')),
                ('department_team', models.ForeignKey(help_text='Required if no employee: Formula applies to this department team.', on_delete=django.db.models.deletion.CASCADE, to='user.departmentteams')),
                ('employee', models.ForeignKey(blank=True, help_text='Optional: Formula applies to this employee only.', null=True, on_delete=django.db.models.deletion.CASCADE, to='user.employee')),
                ('formula', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.formula')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('department_team__isnull', False), ('employee__isnull', True)), ('employee__isnull', False), _connector='OR'), name='employee_or_department_required')],
            },
        ),
    ]
